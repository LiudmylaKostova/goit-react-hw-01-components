{"version":3,"sources":["components/task02/Statistics.module.css","components/task01/ProfileDescr.module.css","components/task03/FriendListItem.module.css","components/task01/ProfileStatsItem.module.css","components/task04/TransactionHistory.module.css","components/task01/ProfileStats.module.css","components/task01/Profile.module.css","components/task03/FriendList.module.css","components/task01/ProfileDescr.js","components/task01/ProfileStatsItem.js","components/task01/ProfileStats.js","components/task01/Profile.js","components/task02/colorRandom.js","components/task02/Statistics.js","components/task03/FriendListItem.js","components/task03/FriendList.js","components/task04/TransactionHistory.js","components/App.js","index.js"],"names":["module","exports","ProfileDescr","user","name","tag","location","avatar","className","styles","description","src","alt","ProfileStatsItem","label","quantity","item","ProfileStats","stats","Object","keys","map","el","Profile","profile","colorRandom","color","Math","round","random","Statistics","title","section","stat","style","backgroundColor","percentage","id","defaultProps","propType","PropTypes","string","arrayOf","shape","isRequired","number","FriendListItem","status","isOnline","width","FriendList","friends","friend","bool","TransactionHistory","items","transactionHistory","thead","tr","type","amount","currency","App","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.654d08eb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Statistics_section__2DWEl\",\"title\":\"Statistics_title__1Jqy0\",\"stats\":\"Statistics_stats__2Jegv\",\"item\":\"Statistics_item__1xfy_\",\"label\":\"Statistics_label__2CSW7\",\"percentage\":\"Statistics_percentage__2BZOx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"ProfileDescr_description__3DQEJ\",\"avatar\":\"ProfileDescr_avatar__23XuG\",\"name\":\"ProfileDescr_name__18blb\",\"tag\":\"ProfileDescr_tag__3-PIl\",\"location\":\"ProfileDescr_location__ShA8Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__2LE-v\",\"status\":\"FriendListItem_status__uZud_\",\"avatar\":\"FriendListItem_avatar__Nb-EL\",\"name\":\"FriendListItem_name__1U8jO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProfileStatsItem_item__2c6-a\",\"label\":\"ProfileStatsItem_label__EJZ_G\",\"quantity\":\"ProfileStatsItem_quantity__2QYwa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__Vm865\",\"thead\":\"TransactionHistory_thead__298I9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stats\":\"ProfileStats_stats__1LtGq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2uERc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"FriendList_friends__2H0aN\"};","import React from 'react';\r\nimport styles from './ProfileDescr.module.css';\r\n\r\n\r\nconst ProfileDescr = ({ user: { name, tag, location, avatar } }) => {\r\n    return (\r\n        <div className={styles.description}>\r\n            <img src={avatar} alt=\"Аватар пользователя\" className={styles.avatar} />\r\n            <p className={styles.name}> {name} </p>\r\n            <p className={styles.tag}> @{tag} </p >\r\n            <p className={styles.location}> {location} </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileDescr;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ProfileStatsItem.module.css';\r\n\r\nconst ProfileStatsItem = ({label, quantity}) => {\r\n  return (\r\n      <li className={styles.item}>\r\n        <span className={styles.label}> {label} </span>\r\n        <span className={styles.quantity}> {quantity} </span>\r\n      </li>\r\n  );\r\n};\r\n\r\nProfileStatsItem.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  quantity: PropTypes.number.isRequired\r\n}\r\n\r\nexport default ProfileStatsItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ProfileStatsItem from './ProfileStatsItem';\r\nimport styles from './ProfileStats.module.css'\r\n\r\nconst ProfileStats = ({stats}) => {\r\n  return (\r\n    <ul className = {styles.stats}>     \r\n      {\r\n      Object.keys(stats).map(el =>(\r\n          <ProfileStatsItem key={el} label={el} quantity={stats[el]}/>\r\n        ))\r\n      }\r\n\r\n{/* {  Object.entries(stats).map(el =>(\r\n        <ProfileStatsItem key={el[0]} label={el[0]} quantity={el[1]}/>\r\n      ))\r\n    } */}\r\n    </ul>\r\n  ); \r\n};\r\n\r\nProfileStats.propTypes = {\r\n  stats: PropTypes.object.isRequired\r\n}\r\n\r\nexport default ProfileStats;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ProfileDescr from './ProfileDescr';\r\nimport ProfileStats from './ProfileStats';\r\nimport styles from './Profile.module.css';\r\n\r\n\r\nconst Profile = ({ name, tag, location, avatar, stats }) => {\r\n    return (\r\n        <div className={styles.profile}>\r\n            <ProfileDescr user = {{ name, tag, location, avatar }} />\r\n            <ProfileStats stats = {stats} />\r\n        </div>\r\n    );\r\n};\r\n\r\nProfile.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    tag: PropTypes.string.isRequired,\r\n    location: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string.isRequired,\r\n    stats: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default Profile;","function colorRandom() {\r\n  const color = () => Math.round(Math.random() * 255);\r\n  return `rgb(${color()}, ${color()}, ${color()})`;\r\n}\r\nexport default colorRandom;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css';\r\nimport colorRandom from './colorRandom';\r\n\r\n\r\nconst Statistics = ({ title, stats }) => {\r\n    return (\r\n<section className = {styles.section}>\r\n {title && <h2 className = {styles.title}>{title}</h2>}\r\n {/* {title ? <h2 className={styles.title}>{title}</h2> : null} */}\r\n\r\n  <ul className = {styles.stats}>\r\n{ stats.map(stat => (\r\n  <li key={stat.id}\r\n  className={styles.item}\r\n        style={{ backgroundColor: colorRandom() }}>  \r\n        <span className = {styles.label}>{stat.label}</span>\r\n        <span className = {styles.percentage}>{stat.percentage} % </span>\r\n     </li> ))}\r\n </ul>\r\n</section>\r\n    );\r\n};\r\n\r\nStatistics.defaultProps = {\r\n  title: '',\r\n};\r\n\r\nStatistics.propType = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FriendListItem.module.css';\r\n\r\n\r\nconst stylesColor = (status) => ({\r\n  backgroundColor: status ? 'green' : 'red'\r\n})\r\n\r\n\r\nconst FriendListItem = ({ avatar, name, isOnline }) => {\r\n    return (\r\n        <>\r\n            <li className={styles.item}>\r\n                 <span className={styles.status} style={stylesColor(isOnline)}>{isOnline}</span>\r\n                {/* <span className={isOnline ? styles.online : styles.offline}>{isOnline}</span> */}\r\n                {/* <span className={styles.status}>{isOnline}</span>  */}\r\n                <img className = {styles.avatar} src={avatar} alt={name} width=\"48\"  />\r\n                <p className = {styles.name} >{name}</p>\r\n            </li>\r\n        </>\r\n    )\r\n};\r\n\r\nFriendListItem.propType = {\r\n  isOnline: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  \r\n};\r\n\r\n\r\n\r\n\r\nexport default FriendListItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FriendListItem from './FriendListItem';\r\nimport styles from './FriendList.module.css';\r\n\r\n// const FriendList = ({ friends }) => {\r\n//     return (\r\n//         <ul >\r\n//             {friends.map(friend => (\r\n//                 <FriendListItem key={friend.id}\r\n//                     isOnline={friend.isOnline}\r\n//                     avatar={friend.avatar}\r\n//                     name={friend.name}/>\r\n//                 ))}\r\n//         </ul>\r\n//     )\r\n// };\r\n\r\nfunction FriendList({ friends }) {\r\n  return (\r\n    <ul className = {styles.friends}>\r\n      {friends.map(friend => (\r\n        <FriendListItem key={friend.id} {...friend} />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\n\r\nFriendList.propType = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      avatar: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\n\r\nexport default FriendList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './TransactionHistory.module.css';\r\n\r\n\r\nconst TransactionHistory = ({ items }) => {\r\n    return (\r\n<table className = {styles.transactionHistory} >\r\n  <thead className = {styles.thead}>\r\n    <tr>\r\n      <th>Type</th>\r\n      <th>Amount</th>\r\n      <th>Currency</th>\r\n    </tr>\r\n  </thead>\r\n\r\n    <tbody>\r\n      {items.map(item => (\r\n      <tr className = {styles.tr} key = {item.id}>\r\n      <td>{item.type}</td>\r\n      <td>{item.amount}</td>\r\n      <td>{item.currency}</td>\r\n      </tr>\r\n      ))}        \r\n            \r\n   </tbody>\r\n</table>\r\n    );\r\n};\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.array.isRequired,  \r\n}\r\n\r\n\r\n\r\n\r\nexport default TransactionHistory;\r\n","import React from 'react';\r\nimport Profile from './task01/Profile';\r\nimport user from './task01/user.json';\r\nimport statisticalData from './task02/statistical-data.json';\r\nimport Statistics from './task02/Statistics';\r\nimport friends from './task03/friends.json';\r\nimport FriendList from './task03/FriendList';\r\nimport transactions from './task04/transaction.json';\r\nimport TransactionHistory from './task04/TransactionHistory';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <>                \r\n      <Profile {...user} />\r\n    {/* <Profile\r\n    name={user.name}\r\n    tag={user.tag}\r\n    location={user.location}\r\n    avatar={user.avatar}\r\n    stats={user.stats}\r\n    /> */}\r\n      \r\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\r\n      {/* <Statistics stats={statisticalData} /> */}\r\n      \r\n      <FriendList friends={friends} />\r\n\r\n      <TransactionHistory items={transactions} />\r\n\r\n    </> \r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport 'modern-normalize/modern-normalize.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}